// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
  style={
    {
      "alignSelf": "center",
      "flex": 1,
      "paddingTop": 58,
    }
  }
>
  <Text
    style={
      {
        "alignSelf": "center",
        "color": "black",
        "fontSize": 50,
        "marginBottom": 20,
        "marginTop": 100,
      }
    }
  >
    SkillFlash
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      style={
        {
          "alignSelf": "center",
          "borderStyle": "solid",
          "borderWidth": 5,
          "color": "black",
          "fontSize": 20,
          "fontWeight": "bold",
        }
      }
    >
      Log in
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      style={
        {
          "alignSelf": "center",
          "borderStyle": "solid",
          "borderWidth": 5,
          "color": "black",
          "fontSize": 20,
          "fontWeight": "bold",
        }
      }
    >
      Sign up
    </Text>
  </View>
</RNCSafeAreaView>
`;
